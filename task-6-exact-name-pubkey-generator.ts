import { Keypair } from "@solana/web3.js";
import * as readline from 'readline';

const rl = readline.createInterface({
    input: process.stdin,
    output: process.stdout
});

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è –≤–≤–æ–¥—É –≤—ñ–¥ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
const question = (query: string): Promise<string> => new Promise(resolve => rl.question(query, resolve));

// –ì–æ–ª–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
(async () => {
    const prefix = await question("–í–≤–µ–¥—ñ—Ç—å —ñ–º'—è –¥–ª—è –ø–æ—à—É–∫—É (–º–∞–∫—Å. 4 —Å–∏–º–≤–æ–ª–∏): ");
    if (prefix.length > 4) {
        console.log("‚ùå –ü–æ–º–∏–ª–∫–∞: —ñ–º'—è –Ω–µ –º–æ–∂–µ –ø–µ—Ä–µ–≤–∏—â—É–≤–∞—Ç–∏ 4 —Å–∏–º–≤–æ–ª–∏.");
        process.exit(1);
    }

    const caseSensitiveAnswer = await question("–ß–∏ —á—É—Ç–ª–∏–≤–∏–π –¥–æ —Ä–µ–≥—ñ—Å—Ç—Ä—É –ø–æ—à—É–∫? (yes/no): ");
    const caseSensitive = caseSensitiveAnswer.toLowerCase() === 'yes';

    let keypair: Keypair;
    let publicKey: string;
    let attempts = 0;
    const startTime = Date.now();

    console.log("üîç –ü–æ—á–∏–Ω–∞—î—Ç—å—Å—è –ø–æ—à—É–∫...");

    while (true) {
        attempts++;
        keypair = Keypair.generate();
        publicKey = keypair.publicKey.toBase58();

        const target = caseSensitive ? prefix : prefix.toLowerCase();
        const candidate = caseSensitive ? publicKey.slice(0, prefix.length) : publicKey.slice(0, prefix.length).toLowerCase();

        if (candidate === target) {
            break;
        }

        if (attempts % 100000 === 0) {
            console.log(`üîÑ –ü–µ—Ä–µ–±—Ä–∞–Ω–æ ${attempts} –∫–ª—é—á—ñ–≤...`);
        }
    }

    const endTime = Date.now();
    const duration = (endTime - startTime) / 1000;

    console.log(`‚úÖ –ó–Ω–∞–π–¥–µ–Ω–æ!`);
    console.log(`üîë –ü—É–±–ª—ñ—á–Ω–∏–π –∫–ª—é—á: ${publicKey}`);
    console.log(`üîê –ü—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á: ${keypair.secretKey}`);
    console.log(`‚è≥ –ß–∞—Å –ø–µ—Ä–µ–±–æ—Ä—É: ${duration} —Å–µ–∫—É–Ω–¥`);
    console.log(`üî¢ –ö—ñ–ª—å–∫—ñ—Å—Ç—å –ø–µ—Ä–µ–±–æ—Ä—ñ–≤: ${attempts}`);

    rl.close();
})();
